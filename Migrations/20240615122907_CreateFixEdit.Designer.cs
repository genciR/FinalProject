// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smartphone_Shop.Models;

namespace Smartphone_Shop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240615122907_CreateFixEdit")]
    partial class CreateFixEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "8ffe0bc0-1a2d-411f-8ad3-a5ba3fa5942c",
                            ConcurrencyStamp = "9c4cb918-9be8-41fd-bb7a-40b75aebc037",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "a6a0a663-c119-48cf-b4f6-6fb24b9d5035",
                            ConcurrencyStamp = "89891c77-9ac3-4e52-bf51-a15e012463f1",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "44a56b6a-75da-468e-96ab-69b87f29d825",
                            RoleId = "8ffe0bc0-1a2d-411f-8ad3-a5ba3fa5942c"
                        },
                        new
                        {
                            UserId = "239ae39d-cd95-4b0e-a245-799df01f3519",
                            RoleId = "a6a0a663-c119-48cf-b4f6-6fb24b9d5035"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Poco"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nokia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Alcatel"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Cpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Frequency")
                        .HasColumnType("float");

                    b.Property<string>("GraphicsChip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ManProcess")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumOfCores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cpu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Frequency = 3.0,
                            GraphicsChip = "Adreno 730",
                            ManProcess = 4,
                            ModelName = "Snapdragon 8 Gen 1",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 2,
                            Frequency = 2.7999999999999998,
                            GraphicsChip = "Adreno 660",
                            ManProcess = 5,
                            ModelName = "Snapdragon 888",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 3,
                            Frequency = 2.2000000000000002,
                            GraphicsChip = "Adreno 619",
                            ManProcess = 6,
                            ModelName = "Snapdragon 695 5G",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 4,
                            Frequency = 2.8999999999999999,
                            GraphicsChip = "Adreno 640",
                            ManProcess = 7,
                            ModelName = "Snapdragon 860",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 5,
                            Frequency = 3.1000000000000001,
                            GraphicsChip = "4-core Apple A14 GPU",
                            ManProcess = 5,
                            ModelName = "Apple A14 Bionic",
                            NumOfCores = 6
                        },
                        new
                        {
                            Id = 6,
                            Frequency = 3.2000000000000002,
                            GraphicsChip = "5-core Apple A15 GPU",
                            ManProcess = 5,
                            ModelName = "Apple A15 Bionic",
                            NumOfCores = 4
                        },
                        new
                        {
                            Id = 7,
                            Frequency = 1.95,
                            GraphicsChip = "Adreno 505",
                            ManProcess = 12,
                            ModelName = "Snapdragon 439",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 8,
                            Frequency = 2.0,
                            GraphicsChip = "PowerVR GE8320",
                            ManProcess = 12,
                            ModelName = "Helio G25",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 9,
                            Frequency = 2.2000000000000002,
                            GraphicsChip = "Qualcomm Adreno 615",
                            ManProcess = 11,
                            ModelName = "Snapdragon 678",
                            NumOfCores = 8
                        },
                        new
                        {
                            Id = 10,
                            Frequency = 2.3999999999999999,
                            GraphicsChip = "Adreno 642L",
                            ManProcess = 6,
                            ModelName = "Snapdragon 778 5G",
                            NumOfCores = 8
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "White"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Purple"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.CustomUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "44a56b6a-75da-468e-96ab-69b87f29d825",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fb4ffce3-6562-4440-94b0-19b36c2fa632",
                            Email = "phonestore@admin.com",
                            EmailConfirmed = false,
                            FirstName = "Phonestore",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "PHONESTORE@ADMIN.COM",
                            NormalizedUserName = "PHONESTOREADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEK+e6KyxF7pzPSkD1RIK4gChb5MKrypqum+/T/PJ00hQq8uy9KorLjvWf6NLVlaSoA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c2419ceb-b0b0-4d84-9a0f-aca5c8987197",
                            TwoFactorEnabled = false,
                            UserName = "PhonestoreAdmin"
                        },
                        new
                        {
                            Id = "239ae39d-cd95-4b0e-a245-799df01f3519",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b21331b-886b-4fa6-bce9-5fd8812bb5df",
                            Email = "PhonestoreUser@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Phonestore",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "PHONESTOREUSER@GMAIL.COM",
                            NormalizedUserName = "PHONESTOREUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEL8Gv3CRJY5v1Fy3epgUkO0jxm65bMUyHWEq0jf6aEKY2pYaL+BAM7qXqRitIbSSMQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e08697ae-e69e-4599-8d60-45b68a005c49",
                            TwoFactorEnabled = false,
                            UserName = "Phonestore User"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.DisplayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("DisplayType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Amoled"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LCD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Super Retina XDR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Super Retina"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.OpSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("OpSystem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Android"
                        },
                        new
                        {
                            Id = 2,
                            Name = "iOS"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.SimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("SimType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Micro SIM"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nano SIM"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.UsbType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("UsbType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USB Type A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USB Type B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USB Type C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lightning"
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Battery")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("CpuId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DisplayRatio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayRes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DisplaySize")
                        .HasColumnType("float");

                    b.Property<int>("DisplayTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("HotOffer")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OpSystemId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SimTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.Property<int>("UsbTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CpuId");

                    b.HasIndex("DisplayTypeId");

                    b.HasIndex("OpSystemId");

                    b.HasIndex("SimTypeId");

                    b.HasIndex("UsbTypeId");

                    b.ToTable("Phone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Battery = 5500,
                            BrandId = 2,
                            Camera = "Back: Quad 108mpx 20mpx 20mpx 16mpx, Selfie: Dual 40mpx 16mpx",
                            ColorId = 3,
                            CpuId = 4,
                            Description = "he Samsung Galaxy S22 specs are top-notch including a Snapdragon 8 Gen 1 chipset, 8GB RAM coupled with 128/256GB storage, and a 3700mAh battery with 25W charging speed. The phone sports a 6.1-inch Dynamic AMOLED display with an adaptive 120Hz refresh rate.",
                            DisplayRatio = "19.5:9",
                            DisplayRes = "2160 X 1440",
                            DisplaySize = 6.0999999999999996,
                            DisplayTypeId = 1,
                            HotOffer = true,
                            ImageUrl = "https://fscl01.fonpit.de/devices/23/2223.png",
                            ModelName = "Galaxy S22",
                            OpSystemId = 1,
                            Price = 800.0,
                            Ram = 8,
                            ReleaseDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 256,
                            UsbTypeId = 3,
                            Weight = 280
                        },
                        new
                        {
                            Id = 2,
                            Battery = 5160,
                            BrandId = 4,
                            Camera = "Back: Quad 48mpx 8mpx 2mpx 2mpx, Selfie: Single 20mpx",
                            ColorId = 2,
                            CpuId = 3,
                            Description = "The POCO X3 Pro specs offer powerful and versatile smartphone that is perfect for any gadget enthusiast.",
                            DisplayRatio = "20:9",
                            DisplayRes = "2400 X 1800",
                            DisplaySize = 6.7000000000000002,
                            DisplayTypeId = 1,
                            HotOffer = false,
                            ImageUrl = "https://cdn.homeshopping.pk/product_images/g/626/Product-Images---600x600---x3-pro-01_da6f3438-a2ce-4839-93aa-40ebed377067_grande__46137_zoom.png",
                            ModelName = "X3 Pro",
                            OpSystemId = 1,
                            Price = 250.0,
                            Ram = 8,
                            ReleaseDate = new DateTime(2021, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 128,
                            UsbTypeId = 3,
                            Weight = 280
                        },
                        new
                        {
                            Id = 3,
                            Battery = 3500,
                            BrandId = 6,
                            Camera = "Back: Dual 13mpx 5mpx, Selfie: Single 8mpx",
                            ColorId = 4,
                            CpuId = 7,
                            Description = "Alcatel 3(2019) powerful core, Snapdragon chipset, long-lasting battery and radiant design, Alcatel 3 has both style and substance.",
                            DisplayRatio = "19.5:9",
                            DisplayRes = "1560 X 720",
                            DisplaySize = 5.9400000000000004,
                            DisplayTypeId = 2,
                            HotOffer = false,
                            ImageUrl = "https://www.alcatelmobile.com/eu/wp-content/uploads/2019/06/alcatel_product-details_alcatel3_black.png",
                            ModelName = "3 (2019)",
                            OpSystemId = 1,
                            Price = 160.0,
                            Ram = 3,
                            ReleaseDate = new DateTime(2019, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 32,
                            UsbTypeId = 2,
                            Weight = 145
                        },
                        new
                        {
                            Id = 4,
                            Battery = 5050,
                            BrandId = 5,
                            Camera = "Back: Triple 13mpx 2mpx 2mpx, Selfie: Single 8mpx",
                            ColorId = 6,
                            CpuId = 8,
                            Description = "Nokia G10 Android smartphone. Announced Apr 2021. Features 6.52″ display, MediaTek MT6762G Helio G25 chipset, 5050 mAh battery, 64 GB storage, 4 GB RAM.",
                            DisplayRatio = "20:9",
                            DisplayRes = "1600 X 720",
                            DisplaySize = 6.5199999999999996,
                            DisplayTypeId = 2,
                            HotOffer = false,
                            ImageUrl = "https://media.croma.com/image/upload/v1657894463/Croma%20Assets/Communication/Mobiles/Images/258404_9_l5jfzl.png",
                            ModelName = "G10",
                            OpSystemId = 1,
                            Price = 130.0,
                            Ram = 3,
                            ReleaseDate = new DateTime(2021, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 32,
                            UsbTypeId = 3,
                            Weight = 194
                        },
                        new
                        {
                            Id = 5,
                            Battery = 5000,
                            BrandId = 4,
                            Camera = "Back: Quad 108mpx 64mpx 8mpx 2mpx, Selfie: Single 16mpx",
                            ColorId = 4,
                            CpuId = 3,
                            Description = "POCO X4 Pro 5G features a 6.67-inch 120Hz FHD+ AMOLED Display, 108MP triple camera, 67W turbocharging, and High-performance Snapdragon® 5G processor.",
                            DisplayRatio = "20:9",
                            DisplayRes = "2400 X 1080",
                            DisplaySize = 6.6699999999999999,
                            DisplayTypeId = 1,
                            HotOffer = false,
                            ImageUrl = "https://i01.appmifile.com/webfile/globalimg/Iris/poco-x4-pro-5g-blue!800x800!85.png",
                            ModelName = "X4 Pro 5g",
                            OpSystemId = 1,
                            Price = 280.0,
                            Ram = 6,
                            ReleaseDate = new DateTime(2022, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 64,
                            UsbTypeId = 3,
                            Weight = 205
                        },
                        new
                        {
                            Id = 6,
                            Battery = 5000,
                            BrandId = 3,
                            Camera = "Back: Quad 48mpx 8mpx 2mpx 2mpx, Selfie: Single 13mpx",
                            ColorId = 4,
                            CpuId = 8,
                            Description = "Redmi Note 10 is equipped with a new 6.43 AMOLED display,Qualcomm® Snapdragon™ 678 processor,5000mAh (typ) battery,33W fast charger.",
                            DisplayRatio = "20:9",
                            DisplayRes = "2400 X 1080",
                            DisplaySize = 6.4299999999999997,
                            DisplayTypeId = 1,
                            HotOffer = false,
                            ImageUrl = "https://static.ananas.rs/assets/Product_Images/Smartphones/xiaomi_redmi_note_10_16_3_cm_6_43_dve_sim_kartice_android_11_4g_usb_tipa_c_4_gb_128_gb_5000_mah_sivo/3506c52e36560108.png",
                            ModelName = "Redmi Note 10",
                            OpSystemId = 1,
                            Price = 210.0,
                            Ram = 4,
                            ReleaseDate = new DateTime(2021, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 64,
                            UsbTypeId = 3,
                            Weight = 178
                        },
                        new
                        {
                            Id = 7,
                            Battery = 2815,
                            BrandId = 1,
                            Camera = "Back: Dual 12mpx 12mpx, Selfie: Single 12mpx",
                            ColorId = 4,
                            CpuId = 7,
                            Description = "The iPhone 12 features a 6.1-inch (15 cm) display with Super Retina XDR OLED technology at a resolution of 2532 × 1170 pixels and a pixel density of about 460 ppi.",
                            DisplayRatio = "19.5:9",
                            DisplayRes = "2532 X 1170",
                            DisplaySize = 6.0999999999999996,
                            DisplayTypeId = 3,
                            HotOffer = true,
                            ImageUrl = "https://www.futuretelecoms.co.za/wp-content/uploads/2020/11/iPhone-12-Blue.png",
                            ModelName = "iPhone 12",
                            OpSystemId = 2,
                            Price = 700.0,
                            Ram = 4,
                            ReleaseDate = new DateTime(2020, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 64,
                            UsbTypeId = 3,
                            Weight = 164
                        },
                        new
                        {
                            Id = 8,
                            Battery = 4500,
                            BrandId = 2,
                            Camera = "Back: Quad 64mpx 12mpx 5mpx 5mp, Selfie: Single 32 mpx",
                            ColorId = 3,
                            CpuId = 6,
                            Description = "Meet the Samsung Galaxy A52s 5G with its 6.5 inch AMOLED display, multiple cameras and long - lasting battery. Plus, it's IP67 rated water & dust resistant.",
                            DisplayRatio = "20:9",
                            DisplayRes = "2400 X 1080",
                            DisplaySize = 6.5,
                            DisplayTypeId = 1,
                            HotOffer = false,
                            ImageUrl = "https://img.genial.ly/604b4ccbe40c2b0f76cf0feb/280fd528-970a-40ac-bba4-64b7941d1649.png",
                            ModelName = "Galaxy A52s 5G",
                            OpSystemId = 1,
                            Price = 300.0,
                            Ram = 6,
                            ReleaseDate = new DateTime(2021, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 128,
                            UsbTypeId = 3,
                            Weight = 189
                        },
                        new
                        {
                            Id = 9,
                            Battery = 5500,
                            BrandId = 2,
                            Camera = "Back: Quad 108mpx 20mpx 20mpx 16mpx, Selfie: Dual 40mpx 16mpx",
                            ColorId = 3,
                            CpuId = 4,
                            Description = "The Samsung Galaxy S22 specs are top-notch including a Snapdragon 8 Gen 1 chipset, 8GB RAM coupled with 128/256GB storage, and a 3700mAh battery with 25W charging speed. The phone sports a 6.1-inch Dynamic AMOLED display with an adaptive 120Hz refresh rate.",
                            DisplayRatio = "19.5:9",
                            DisplayRes = "2160 X 1440",
                            DisplaySize = 6.0999999999999996,
                            DisplayTypeId = 1,
                            HotOffer = true,
                            ImageUrl = "https://img.global.news.samsung.com/in/wp-content/uploads/2022/01/SM-G990_S21FE_BackFront_ZW.png",
                            ModelName = "Galaxy S21 FE",
                            OpSystemId = 1,
                            Price = 600.0,
                            Ram = 8,
                            ReleaseDate = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SimTypeId = 3,
                            Storage = 256,
                            UsbTypeId = 3,
                            Weight = 280
                        });
                });

            modelBuilder.Entity("Smartphone_Shop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Ram")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Smartphone_Shop.Models.Entities.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Smartphone_Shop.Models.Entities.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Smartphone_Shop.Models.Entities.CustomUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Phone", b =>
                {
                    b.HasOne("Smartphone_Shop.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Cpu", "Cpu")
                        .WithMany()
                        .HasForeignKey("CpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.DisplayType", "DisplayType")
                        .WithMany()
                        .HasForeignKey("DisplayTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.OpSystem", "OpSystem")
                        .WithMany()
                        .HasForeignKey("OpSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.SimType", "SimType")
                        .WithMany()
                        .HasForeignKey("SimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smartphone_Shop.Models.Entities.UsbType", "UsbType")
                        .WithMany()
                        .HasForeignKey("UsbTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Color");

                    b.Navigation("Cpu");

                    b.Navigation("DisplayType");

                    b.Navigation("OpSystem");

                    b.Navigation("SimType");

                    b.Navigation("UsbType");
                });

            modelBuilder.Entity("Smartphone_Shop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Smartphone_Shop.Models.Phone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneId");

                    b.HasOne("Smartphone_Shop.Models.Entities.ShoppingCart", null)
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("Smartphone_Shop.Models.Entities.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
